<?php

use Drupal\Core\Cache\Cache;
use Symfony\Component\HttpFoundation\RedirectResponse;

/**
 * Implements hook_form_alter().
 */
function bays_form_alter(&$form, \Drupal\Core\Form\FormStateInterface $form_state, $form_id) {
  // Check if the form is either the add or edit form.
  if ($form_id == 'as_league_organization_add_form' || $form_id == 'as_league_organization_edit_form') {

    //\Drupal::logger('bays')->debug('<pre>' . print_r($form_state->getValues(), TRUE) . '</pre>');
    //\Drupal::logger('bays')->debug('<pre>' . print_r($form, TRUE) . '</pre>');
    $org_id = (isset($form['id']['#value'])) ? $form['id']['#value'] : NULL;

    $default_values = [
        'notify_ref' => 0,
        'ref_reject' => 0,
        'ztrt' => 0,
      ];

    // If an organization ID is present, fetch the existing values from the database.
    if ($org_id) {

        $connection = \Drupal::database();
        $query = $connection->select('as_league_orgs', 'a')
        ->fields('a', ['notify_ref', 'ref_reject', 'ztrt'])
        ->condition('org_id', $org_id)
        ->execute()
        ->fetchAssoc();

      if ($query) {
        $default_values['notify_ref'] = $query['notify_ref'];
        $default_values['ref_reject'] = $query['ref_reject'];
        $default_values['ztrt']       = $query['ztrt'];
      }
    }

    // Add new checkbox fields to the form.
    $form['notify_ref'] = [
      '#type' => 'checkbox',
      '#title' => t('Notify Ref'),
      '#description' => t('Enable Notify Ref.'),
      '#default_value' => $default_values['notify_ref'],
    ];

    $form['ref_reject'] = [
      '#type' => 'checkbox',
      '#title' => t('Ref Reject'),
      '#description' => t('Enable Ref Reject.'),
      '#default_value' => $default_values['ref_reject'],
    ];

    $form['ztrt'] = [
      '#type' => 'checkbox',
      '#title' => t('ZTRT'),
      '#description' => t('Enable ZTRT.'),
      '#default_value' => $default_values['ztrt'],
    ];

    // Ensure the form submit handler is attached.
    $form['actions']['submit']['#submit'][] = 'bays_form_submit';
  }
}

/**
 * Form submission handler for the custom fields.
 */
function bays_form_submit(&$form, \Drupal\Core\Form\FormStateInterface $form_state) {
    
    //$from_id  = $form_state->getValue('form_id');

    // Organization Edit Form 
    if($form_state->getValue('form_id') === 'as_league_organization_edit_form'){

        // Collect all form values.
        $values = $form_state->getValues();

        $org_id = $values['org_id'];

        // Ensure you include all the fields that need to be saved.
        $fields_to_save = [  
            'org_full_name' => $values['org_full_name'],
            'org_name'      => $values['org_name'],
            'website'       => $values['website'],
            'logo_path'     => $values['logo_path'],
            'org_color'     => $values['org_color'],
            'street'        => $values['street'],
            'city'          => $values['city'],
            'state'         => $values['state'],
            'zip_code'      => $values['zip_code'], 
            'notify_ref'    => !empty($values['notify_ref']) ? 1 : 0,
            'ref_reject'    => !empty($values['ref_reject']) ? 1 : 0,
            'ztrt'          => !empty($values['ztrt']) ? 1 : 0,
            // Add other fields from the form if necessary.
        ];

        // Update the fields in the database.
        $connection = \Drupal::database();
        $connection->update('as_league_orgs')->fields($fields_to_save)->condition('org_id', $org_id)->execute();

        Cache::invalidateTags(['as_league_cache_tag']);

        $response = new RedirectResponse('/as_league/orgs/list');
        $response->send();
        
    }

    // Organization Add Form 
    if($form_state->getValue('form_id') === 'as_league_organization_add_form'){

        // Collect all form values.
        $values = $form_state->getValues();

        // Ensure you include all the fields that need to be saved.
        $fields_to_save = [ 
            'org_id'        => $values['org_id'],
            'org_full_name' => $values['org_full_name'],
            'org_name'      => $values['org_name'],
            'website'       => $values['website'],
            'logo_path'     => $values['logo_path'],
            'org_color'     => $values['org_color'],
            'street'        => $values['street'],
            'city'          => $values['city'],
            'state'         => $values['state'],
            'zip_code'      => $values['zip_code'],   
            'notify_ref'    => !empty($values['notify_ref']) ? 1 : 0,
            'ref_reject'    => !empty($values['ref_reject']) ? 1 : 0,
            'ztrt'          => !empty($values['ztrt']) ? 1 : 0,
            // Add other fields from the form if necessary.
        ];

        // Insert the new organization and get the new organization ID.
        $connection = \Drupal::database();
        $connection->insert('as_league_orgs')->fields($fields_to_save)->execute();

        Cache::invalidateTags(['as_league_cache_tag']);

        $response = new RedirectResponse('/as_league/orgs/list');
        $response->send();
    }
  

}
